/* stylelint-disable */
// Примерение , вставить в нужное место @include text-h1;
// @mixin text-h1 {
//    font-size: 32px;
//    line-height: 36px;
//    font-weight: 500;
//    color: $H;
// }

// @mixin bg-cover {
//   background-position: center;
//   background-size: cover;
//   background-repeat: no-repeat;
// }

// @mixin flex {
//   display: flex;
// }

// @mixin flex-v-center {
//   display: flex;
//   align-items: center;
// }

// @mixin flex-h-center {
//   display: flex;
//   justify-content: center;
// }

// @mixin flex-all-center {
//   display: flex;
//   align-items: center;
//   justify-content: center;
// }

// @mixin flex-all-sb {
//   display: flex;
//   align-items: center;
//   justify-content: space-between;
// }

//=================================
//Эта функция использует интерполяцию строк Sass для добавления em к значению. Обратите внимание, что параметр $context имеет значение по умолчанию $browser-context (то есть, что бы вы ни установили для этой переменной). Это означает, что при вызове функции в вашем Sass вам нужно только определить $pixelsзначение, и математика будет рассчитана относительно $browser-context— в данном случае — 16px.
$browser-context: 16; // Default

@function rem($pixels, $context: $browser-context) {
  @return #{$pixels/$context}rem;
}
// Пример использования:
// h1 {
//   font-size: em(32);
// }
// p {
//   font-size: em(14);
// }

// Результат:
// h1 {
//   font-size: 2em;
// }
// p {
//   font-size: 0.875em;
// }
//==================================

@mixin image-set($pathToImage) {
  background-image: url("#{$pathToImage}.jpg");
  /* stylelint-disable-next-line declaration-block-no-duplicate-properties */
  background-image: image-set(
    /* stylelint-disable-next-line function-comma-newline-after */
    "#{$pathToImage}.avif"type("image/avif"),
    "#{$pathToImage}.webp"type("image/webp"),
    "#{$pathToImage}.jpg"type("image/jpg")
  );
}
